export default async function handler(req, res) {
    // --- CORS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è ---
    res.setHeader("Access-Control-Allow-Origin", '*');
    res.setHeader("Access-Control-Allow-Methods", 'POST, GET, OPTIONS');
    res.setHeader("Access-Control-Allow-Headers", 'Content-Type, Authorization');
    
    if (req.method === 'OPTIONS') {
        return res.status(200).end();
    }
    
    if (req.method !== 'POST') {
        return res.status(405).json({ 
            error: '–ú–µ—Ç–æ–¥ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω',
            allowed: ['POST']
        });
    }
    
    try {
        const { question } = req.body;
        
        if (!question || question.trim().length === 0) {
            return res.status(400).json({ 
                error: '–ü—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å',
                message: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å'
            });
        }
        
        if (question.length > 2000) {
            return res.status(400).json({
                error: '–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å',
                message: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –≤–æ–ø—Ä–æ—Å–∞: 2000 —Å–∏–º–≤–æ–ª–æ–≤'
            });
        }
        
        console.log('–ü–æ–ª—É—á–µ–Ω –≤–æ–ø—Ä–æ—Å:', question.substring(0, 100));
        
        // –í–∞—Ä–∏–∞–Ω—Ç 1: –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ OpenAI-—Å–æ–≤–º–µ—Å—Ç–∏–º–æ–≥–æ API (Together AI)
        const TOGETHER_API_KEY = process.env.TOGETHER_API_KEY;
        
        if (TOGETHER_API_KEY) {
            try {
                const togetherResponse = await fetch('https://api.together.xyz/v1/chat/completions', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${TOGETHER_API_KEY}`
                    },
                    body: JSON.stringify({
                        model: 'mistralai/Mixtral-8x7B-Instruct-v0.1',
                        messages: [
                            {
                                role: 'system',
                                content: '–¢—ã –ø–æ–ª–µ–∑–Ω—ã–π AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –ø–æ–Ω—è—Ç–Ω–æ –∏ –ø–æ–¥—Ä–æ–±–Ω–æ. –ë—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º –∏ –ø–æ–º–æ–≥–∞–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.'
                            },
                            {
                                role: 'user',
                                content: question
                            }
                        ],
                        max_tokens: 1024,
                        temperature: 0.7,
                        stream: false
                    })
                });
                
                if (togetherResponse.ok) {
                    const togetherData = await togetherResponse.json();
                    if (togetherData.choices && togetherData.choices[0] && togetherData.choices[0].message) {
                        return res.status(200).json({ 
                            answer: togetherData.choices[0].message.content,
                            question: question,
                            timestamp: new Date().toISOString(),
                            provider: 'together',
                            responseId: Math.random().toString(36).substring(2, 9)
                        });
                    }
                }
            } catch (togetherError) {
                console.log('Together AI –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É:', togetherError.message);
            }
        }
        
        // –í–∞—Ä–∏–∞–Ω—Ç 2: –£–º–Ω—ã–π –¥–µ–º–æ-—Ä–µ–∂–∏–º —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏
        const improvedAnswer = await generateImprovedAnswer(question);
        
        return res.status(200).json({ 
            answer: improvedAnswer,
            question: question,
            timestamp: new Date().toISOString(),
            provider: 'improved_demo',
            responseId: Math.random().toString(36).substring(2, 9)
        });
        
    } catch (error) {
        console.error('API Error:', error);
        return res.status(500).json({ 
            error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
            message: error.message || '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ'
        });
    }
}

// –£–ª—É—á—à–µ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç–≤–µ—Ç–æ–≤
async function generateImprovedAnswer(question) {
    // –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –≤–æ–ø—Ä–æ—Å–æ–≤
    const lowerQuestion = question.toLowerCase();
    
    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    if (lowerQuestion.includes('–ø—Ä–∏–≤–µ—Ç') || lowerQuestion.includes('–∑–¥—Ä–∞–≤—Å—Ç–≤') || lowerQuestion.includes('–¥–æ–±—Ä') || lowerQuestion.includes('hello') || lowerQuestion.includes('hi')) {
        return `–ü—Ä–∏–≤–µ—Ç! üëã –†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å! ${lowerQuestion.includes('–¥–µ–Ω—å') || lowerQuestion.includes('—É—Ç—Ä–æ') || lowerQuestion.includes('–≤–µ—á–µ—Ä') ? '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –æ–±—â–µ–Ω–∏—è!' : '–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?'}`;
    }
    
    // –í–æ–ø—Ä–æ—Å—ã –æ –ø–æ–≥–æ–¥–µ
    if (lowerQuestion.includes('–ø–æ–≥–æ–¥') || lowerQuestion.includes('weather')) {
        const cities = ['—É—Ñ–µ', '–º–æ—Å–∫–≤', '—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥', '–∫–∞–∑–∞–Ω', '–µ–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥'];
        const foundCity = cities.find(city => lowerQuestion.includes(city));
        const city = foundCity ? 
            (foundCity === '—É—Ñ–µ' ? '–£—Ñ–µ' : 
             foundCity === '–º–æ—Å–∫–≤' ? '–ú–æ—Å–∫–≤–µ' :
             foundCity === '—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥' ? '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ' :
             foundCity === '–∫–∞–∑–∞–Ω' ? '–ö–∞–∑–∞–Ω–∏' : '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–µ') : '–≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ';
        
        const weatherOptions = [
            `–°–µ–≥–æ–¥–Ω—è –≤ ${city} –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞—è –ø–æ–≥–æ–¥–∞! ‚òÄÔ∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –æ–∫–æ–ª–æ +20¬∞C, –ª–µ–≥–∫–∏–π –≤–µ—Ç–µ—Ä–æ–∫. –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –ø—Ä–æ–≥—É–ª–æ–∫!`,
            `–í ${city} —Å–µ–≥–æ–¥–Ω—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å ‚õÖ. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ +15...+18¬∞C. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤–∑—è—Ç—å –∑–æ–Ω—Ç –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π!`,
            `–ü–æ–≥–æ–¥–∞ –≤ ${city}: –ø—Ä–æ—Ö–ª–∞–¥–Ω—ã–π –¥–µ–Ω—å, +10...+12¬∞C, –≤–æ–∑–º–æ–∂–Ω—ã –æ—Å–∞–¥–∫–∏. ‚òî –°–æ–≤–µ—Ç—É—é –æ–¥–µ—Ç—å—Å—è –ø–æ—Ç–µ–ø–ª–µ–µ!`,
            `–í ${city} —Å–µ–≥–æ–¥–Ω—è —Å–æ–ª–Ω–µ—á–Ω–æ –∏ —è—Å–Ω–æ! üåû –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ +22...+25¬∞C. –û—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è outdoor-–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π!`
        ];
        
        return weatherOptions[Math.floor(Math.random() * weatherOptions.length)];
    }
    
    // –í–æ–ø—Ä–æ—Å—ã –æ –≤—Ä–µ–º–µ–Ω–∏
    if (lowerQuestion.includes('–≤—Ä–µ–º') || lowerQuestion.includes('time') || lowerQuestion.includes('—á–∞—Å')) {
        const now = new Date();
        const timeString = now.toLocaleTimeString('ru-RU', { 
            hour: '2-digit', 
            minute: '2-digit' 
        });
        return `–°–µ–π—á–∞—Å ${timeString}. ‚è∞ –í—Ä–µ–º—è –Ω–µ –∂–¥–µ—Ç - –¥–∞–≤–∞–π—Ç–µ –æ–±—Å—É–¥–∏–º –≤–∞—à –≤–æ–ø—Ä–æ—Å!`;
    }
    
    // –û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã
    const generalAnswers = [
        `–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –ü–æ —Ç–µ–º–µ "${question}" —è –º–æ–≥—É —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ —ç—Ç–æ –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è. –í —Ä–µ–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö DeepSeek AI –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –∏ —Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö –Ω—é–∞–Ω—Å–æ–≤.`,
        
        `–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å! "${question}" - —ç—Ç–æ –≤–∞–∂–Ω–∞—è —Ç–µ–º–∞. –ï—Å–ª–∏ –±—ã —É –º–µ–Ω—è –±—ã–ª –¥–æ—Å—Ç—É–ø –∫ –∞–∫—Ç—É–∞–ª—å–Ω—ã–º –¥–∞–Ω–Ω—ã–º —á–µ—Ä–µ–∑ DeepSeek API, —è –±—ã —Å–º–æ–≥ –¥–∞—Ç—å –≤–∞–º –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∏ –ø–æ–ª–µ–∑–Ω—ã–π –æ—Ç–≤–µ—Ç.`,
        
        `–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –∑–∞–ø—Ä–æ—Å! –ü–æ –≤–æ–ø—Ä–æ—Å—É "${question}" —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–¥—Ö–æ–¥–æ–≤ –∏ –º–Ω–µ–Ω–∏–π. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–º—É AI —è –º–æ–≥—É –¥–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–±—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.`,
        
        `–Ø –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ "${question}". –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å—Ç–æ—è—â–∞—è —Ç–µ–º–∞ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è! –í —Ä–∞–±–æ—á–µ–º —Ä–µ–∂–∏–º–µ —Å DeepSeek API —è –±—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –æ—Ç–≤–µ—Ç —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏.`,
        
        `–ü–æ –≤–æ–ø—Ä–æ—Å—É "${question}" —É –º–µ–Ω—è –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º—ã—Å–ª–µ–π, –Ω–æ –¥–ª—è –Ω–∞–∏–±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Å—Ç—É–ø –∫ –æ–±—É—á–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ AI. –í –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ —è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –≤ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –∞–Ω–∞–ª–∏–∑–∞.`
    ];
    
    return generalAnswers[Math.floor(Math.random() * generalAnswers.length)];
}
