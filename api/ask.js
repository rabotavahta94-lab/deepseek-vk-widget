                export default async function handler(req, res) {
    // --- CORS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è ---
    res.setHeader("Access-Control-Allow-Origin", '*');
    res.setHeader("Access-Control-Allow-Methods", 'POST, GET, OPTIONS');
    res.setHeader("Access-Control-Allow-Headers", 'Content-Type, Authorization');
    
    if (req.method === 'OPTIONS') {
        return res.status(200).end();
    }
    
    if (req.method !== 'POST') {
        return res.status(405).json({ 
            error: '–ú–µ—Ç–æ–¥ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω',
            allowed: ['POST']
        });
    }
    
    try {
        const { question, community, jobs } = req.body;
        
        if (!question || question.trim().length === 0) {
            return res.status(400).json({ 
                error: '–ü—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å',
                message: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å'
            });
        }
        
        console.log('–í–æ–ø—Ä–æ—Å –æ—Ç —Å–æ–æ–±—â–µ—Å—Ç–≤–∞:', question.substring(0, 100));
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
        const communityResponse = handleCommunityRequest(question, community, jobs);
        if (communityResponse) {
            return res.status(200).json(communityResponse);
        }
        
        // –£–º–Ω—ã–π –æ—Ç–≤–µ—Ç —Å —É—á–µ—Ç–æ–º —Ç–µ–º–∞—Ç–∏–∫–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
        const smartResponse = generateCommunityResponse(question, community, jobs);
        
        return res.status(200).json({ 
            answer: smartResponse.answer,
            type: smartResponse.type,
            question: question,
            timestamp: new Date().toISOString(),
            provider: 'community_bot'
        });
        
    } catch (error) {
        console.error('API Error:', error);
        return res.status(500).json({ 
            error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
            message: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ'
        });
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
function handleCommunityRequest(question, community, jobs) {
    const lowerQuestion = question.toLowerCase();
    
    // –ü–æ–∏—Å–∫ –≤–∞–∫–∞–Ω—Å–∏–π
    if (/(–≤–∞–∫–∞–Ω—Å|—Ä–∞–±–æ—Ç–∞|–∏—â—É —Ä–∞–±–æ—Ç—É|—Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤)/i.test(question)) {
        const foundJobs = searchJobs(question, jobs);
        return {
            answer: foundJobs,
            type: 'jobs',
            question: question
        };
    }
    
    // –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏
    if (/(–∑–∞—è–≤–∫|–∞–Ω–∫–µ—Ç|–æ—Ç–∫–ª–∏–∫|—Ä–µ–∑—é–º–µ)/i.test(question)) {
        return {
            answer: getApplicationProcess(question),
            type: 'application',
            question: question
        };
    }
    
    // –í–æ–ø—Ä–æ—Å—ã –æ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ
    if (/(—Å–æ–æ–±—â–µ—Å—Ç–≤|–≥—Ä—É–ø–ø|–ø–æ–¥–ø–∏—Å—á–∏–∫)/i.test(question)) {
        return {
            answer: getCommunityInfo(community),
            type: 'text',
            question: question
        };
    }
    
    return null;
}

// –ü–æ–∏—Å–∫ –≤–∞–∫–∞–Ω—Å–∏–π –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
function searchJobs(question, jobs) {
    const lowerQuestion = question.toLowerCase();
    const foundJobs = [];
    
    // –ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    if (/(–Ω–µ—Ñ—Ç–µ–≥–∞–∑|–Ω–µ—Ñ—Ç|–≥–∞–∑)/i.test(question)) {
        foundJobs.push(...(jobs.–Ω–µ—Ñ—Ç–µ–≥–∞–∑ || []));
    }
    
    if (/(—Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤|—Å—Ç—Ä–æ–π–∫|–º–æ–Ω—Ç–∞–∂)/i.test(question)) {
        foundJobs.push(...(jobs.—Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ || []));
    }
    
    if (/(–≤–æ–¥–∏—Ç–µ–ª—å|–ª–æ–≥–∏—Å—Ç–∏–∫|–ø–µ—Ä–µ–≤–æ–∑–∫)/i.test(question)) {
        foundJobs.push(...(jobs.–ª–æ–≥–∏—Å—Ç–∏–∫–∞ || []));
    }
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ
    if (foundJobs.length === 0) {
        Object.values(jobs).forEach(category => {
            foundJobs.push(...category);
        });
    }
    
    return foundJobs.slice(0, 5); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º 5 –≤–∞–∫–∞–Ω—Å–∏—è–º–∏
}

// –ü—Ä–æ—Ü–µ—Å—Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏
function getApplicationProcess(question) {
    const steps = [
        "üìù –ù–∞—á–Ω–µ–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏! –£–∫–∞–∂–∏—Ç–µ:\n1. –§–ò–û –ø–æ–ª–Ω–æ—Å—Ç—å—é\n2. –ñ–µ–ª–∞–µ–º—É—é –≤–∞–∫–∞–Ω—Å–∏—é\n3. –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã\n4. –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω",
        "üìû –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ:\n5. –í–æ–∑—Ä–∞—Å—Ç\n6. –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ\n7. –ì—Ä–∞–∂–¥–∞–Ω—Å—Ç–≤–æ\n8. –†–µ–≥–∏–æ–Ω –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è",
        "‚úÖ –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ! –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ:\n9. –ù–∞–ª–∏—á–∏–µ –º–µ–¥–∫–Ω–∏–∂–∫–∏\n10. –í–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –ø—Ä–∞–≤–∞ (–∫–∞—Ç–µ–≥–æ—Ä–∏–∏)\n11. –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –≤–∞—Ö—Ç–µ"
    ];
    
    return steps[Math.floor(Math.random() * steps.length)];
}

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ
function getCommunityInfo(community) {
    return `‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ "${community.name}":\n\n` +
           `üë• –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: ${community.subscribers}\n` +
           `‚è± –û—Ç–≤–µ—Ç –∑–∞: ${community.responseTime}\n` +
           `üìç ${community.city}\n\n` +
           `üíº –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:\n` +
           `‚Ä¢ –í–∞—Ö—Ç–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞ –≤ –£—Ñ–µ –∏ –ë–∞—à–∫–∏—Ä–∏–∏\n` +
           `‚Ä¢ –¢—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏\n` +
           `‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –≤–∞–∫–∞–Ω—Å–∏—è–º\n` +
           `‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–æ–∏—Å–∫–∞—Ç–µ–ª–µ–π`;
}

// –£–º–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
function generateCommunityResponse(question, community, jobs) {
    const lowerQuestion = question.toLowerCase();
    
    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    if (/(–ø—Ä–∏–≤–µ—Ç|–∑–¥—Ä–∞–≤—Å—Ç–≤|–¥–æ–±—Ä|hello|hi)/i.test(question)) {
        return {
            answer: `üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ "${community.name}"! üíº\n\n–Ø –ø–æ–º–æ–≥—É —Å –ø–æ–∏—Å–∫–æ–º —Ä–∞–±–æ—Ç—ã, –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∑–∞—è–≤–æ–∫ –∏ –æ—Ç–≤–µ—á—É –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –≤–∞—Ö—Ç–æ–≤–æ–π —Ä–∞–±–æ—Ç–µ. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?`,
            type: 'text'
        };
    }
    
    // –í–æ–ø—Ä–æ—Å—ã –æ –∑–∞—Ä–ø–ª–∞—Ç–µ
    if (/(–∑–∞—Ä–ø–ª–∞—Ç|–æ–ø–ª–∞—Ç|–¥–æ—Ö–æ–¥|–∑–∞—Ä–∞–±–æ—Ç–æ–∫)/i.test(question)) {
        return {
            answer: `üí∞ –£—Ä–æ–≤–µ–Ω—å –∑–∞—Ä–ø–ª–∞—Ç –Ω–∞ –≤–∞—Ö—Ç–µ:\n\n` +
                   `‚Ä¢ –†–∞–±–æ—á–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏: 75 000 - 100 000 ‚ÇΩ\n` +
                   `‚Ä¢ –í–æ–¥–∏—Ç–µ–ª–∏: 80 000 - 110 000 ‚ÇΩ\n` +
                   `‚Ä¢ –û–ø–µ—Ä–∞—Ç–æ—Ä—ã, —ç–ª–µ–∫—Ç—Ä–æ–º–æ–Ω—Ç–µ—Ä—ã: 85 000 - 120 000 ‚ÇΩ\n` +
                   `‚Ä¢ –ò–Ω–∂–µ–Ω–µ—Ä—ã, –º–∞—Å—Ç–µ—Ä–∞: –æ—Ç 100 000 ‚ÇΩ\n\n` +
                   `üí° –ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –æ–ø—ã—Ç–∞ –∏ –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–∞–±–æ—Ç—ã!`,
            type: 'text'
        };
    }
    
    // –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã
    if (/(–≥—Ä–∞—Ñ–∏–∫|—Å–º–µ–Ω|–≤–∞—Ö—Ç|–æ—Ç–¥—ã—Ö)/i.test(question)) {
        return {
            answer: `üìÖ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ –≤–∞—Ö—Ç—ã:\n\n` +
                   `‚Ä¢ 15/15 - 15 –¥–Ω–µ–π —Ä–∞–±–æ—Ç—ã, 15 –¥–Ω–µ–π –æ—Ç–¥—ã—Ö–∞\n` +
                   `‚Ä¢ 30/30 - 30 –¥–Ω–µ–π —Ä–∞–±–æ—Ç—ã, 30 –¥–Ω–µ–π –æ—Ç–¥—ã—Ö–∞\n` +
                   `‚Ä¢ 60/30 - 60 –¥–Ω–µ–π —Ä–∞–±–æ—Ç—ã, 30 –¥–Ω–µ–π –æ—Ç–¥—ã—Ö–∞\n\n` +
                   `üïê –†–∞–±–æ—á–∏–π –¥–µ–Ω—å –æ–±—ã—á–Ω–æ 10-12 —á–∞—Å–æ–≤ —Å –ø–µ—Ä–µ—Ä—ã–≤–∞–º–∏`,
            type: 'text'
        };
    }
    
    // –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è
    if (/(—Ç—Ä–µ–±–æ–≤–∞–Ω|–Ω—É–∂–Ω|–Ω–µ–æ–±—Ö–æ–¥–∏–º|—É—Å–ª–æ–≤–∏)/i.test(question)) {
        return {
            answer: `üìã –û—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:\n\n` +
                   `‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç –æ—Ç 18 –ª–µ—Ç\n` +
                   `‚Ä¢ –ú–µ–¥–∫–Ω–∏–∂–∫–∞ (–¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π)\n` +
                   `‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å—É–¥–∏–º–æ—Å—Ç–∏\n` +
                   `‚Ä¢ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–º—É —Ç—Ä—É–¥—É\n` +
                   `‚Ä¢ –î–ª—è –≤–æ–¥–∏—Ç–µ–ª–µ–π - —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n\n` +
                   `‚úÖ –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π –Ω–µ —Ç—Ä–µ–±—É—é—Ç –≤—ã—Å—à–µ–≥–æ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è!`,
            type: 'text'
        };
    }
    
    // –Æ–º–æ—Ä
    if (/(—é–º–æ—Ä|—à—É—Ç–∫|–ø—Ä–∏–∫–æ–ª|—Å–º–µ—à–Ω)/i.test(question)) {
        const jokes = [
            "–ó–Ω–∞–µ—Ç–µ, –ø–æ—á–µ–º—É –≤–∞—Ö—Ç–æ–≤–∏–∫–∏ —Ç–∞–∫–∏–µ —Å–∏–ª—å–Ω—ã–µ? –ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∏ –ø–æ–¥–Ω–∏–º–∞—é—Ç –Ω–µ —Ç–æ–ª—å–∫–æ —Ç—è–∂–µ—Å—Ç–∏, –Ω–æ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ! üòÑ",
            "–í–∞—Ö—Ç–æ–≤–∏–∫ - —ç—Ç–æ —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª–º–µ—Å—è—Ü–∞ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–Ω—å–≥–∏, –∞ –ø–æ–ª–º–µ—Å—è—Ü–∞ –≤—Å–ø–æ–º–∏–Ω–∞–µ—Ç, –∫—É–¥–∞ –∏—Ö –ø–æ—Ç—Ä–∞—Ç–∏–ª! üí∞",
            "–°–∞–º–æ–µ —Å–ª–æ–∂–Ω–æ–µ –≤ –≤–∞—Ö—Ç–µ - –æ–±—ä—è—Å–Ω–∏—Ç—å –∂–µ–Ω–µ, –ø–æ—á–µ–º—É –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ –Ω—É–∂–Ω–æ –æ—Ç–¥—ã—Ö–∞—Ç—å, –∞ –Ω–µ –¥–µ–ª–∞—Ç—å —Ä–µ–º–æ–Ω—Ç! üõ†Ô∏è"
        ];
        return {
            answer: jokes[Math.floor(Math.random() * jokes.length)],
            type: 'text'
        };
    }
    
    // –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è –∏ Donut
    if (/(donut|–¥–æ–Ω–∞—Ç|–ø–æ–¥–ø–∏—Å–∫|–ø—Ä–µ–º–∏—É–º)/i.test(question)) {
        return {
            answer: `üåü –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ —á–µ—Ä–µ–∑ VK Donut:\n\n` +
                   `üíñ –†–µ–≥—É–ª—è—Ä–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –æ—Ç 50 ‚ÇΩ/–º–µ—Å\n` +
                   `üéÅ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤\n` +
                   `‚ö° –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –≤–∞–∫–∞–Ω—Å–∏—è–º\n` +
                   `üìû –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏\n\n` +
                   `–ü–æ–¥–¥–µ—Ä–∂–∏—Ç–µ —Ä–∞–∑–≤–∏—Ç–∏–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞! ‚ù§Ô∏è`,
            type: 'text'
        };
    }
    
    // –û–±—â–∏–π –æ—Ç–≤–µ—Ç
    return {
        answer: `üíº –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å? –°–æ–æ–±—â–µ—Å—Ç–≤–æ "${community.name}" —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞:\n\n` +
               `üîç –ü–æ–∏—Å–∫–µ –≤–∞–∫–∞–Ω—Å–∏–π –≤–∞—Ö—Ç–æ–≤—ã–º –º–µ—Ç–æ–¥–æ–º\n` +
               `üìù –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞—è–≤–æ–∫ –∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è—Ö\n` +
               `ü§ù –ü–æ–¥–¥–µ—Ä–∂–∫–µ —Å–æ–∏—Å–∫–∞—Ç–µ–ª–µ–π\n` +
               `üòÑ –°–æ–∑–¥–∞–Ω–∏–∏ –¥—Ä—É–∂–µ—Å–∫–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã\n\n` +
               `–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ –≤–∞–∫–∞–Ω—Å–∏—è—Ö, —É—Å–ª–æ–≤–∏—è—Ö —Ä–∞–±–æ—Ç—ã –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –±—ã—Å—Ç—Ä—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏!`,
        type: 'text'
    };
            }        
