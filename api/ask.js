export default async function handler(req, res) {
    // --- CORS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è ---
    res.setHeader("Access-Control-Allow-Origin", '*');
    res.setHeader("Access-Control-Allow-Methods", 'POST, GET, OPTIONS');
    res.setHeader("Access-Control-Allow-Headers", 'Content-Type, Authorization');
    
    if (req.method === 'OPTIONS') {
        return res.status(200).end();
    }
    
    if (req.method !== 'POST') {
        return res.status(405).json({ 
            error: '–ú–µ—Ç–æ–¥ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω',
            allowed: ['POST']
        });
    }
    
    try {
        const { question } = req.body;
        
        if (!question || question.trim().length === 0) {
            return res.status(400).json({ 
                error: '–ü—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å',
                message: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å'
            });
        }
        
        if (question.length > 2000) {
            return res.status(400).json({
                error: '–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å',
                message: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –≤–æ–ø—Ä–æ—Å–∞: 2000 —Å–∏–º–≤–æ–ª–æ–≤'
            });
        }
        
        console.log('–ü–æ–ª—É—á–µ–Ω –≤–æ–ø—Ä–æ—Å:', question.substring(0, 100));
        
        // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö API –ø–æ –æ—á–µ—Ä–µ–¥–∏
        
        // 1. –ü–æ–ø—Ä–æ–±—É–µ–º Hugging Face Inference API (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)
        try {
            const hfResponse = await fetch('https://api-inference.huggingface.co/models/microsoft/DialoGPT-medium', {
                method: 'POST',
                headers: {
                    'Authorization': `Bearer ${process.env.HUGGINGFACE_TOKEN || 'hf_default_token'}`,
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    inputs: question,
                    parameters: {
                        max_length: 200,
                        temperature: 0.7,
                        do_sample: true
                    }
                })
            });
            
            if (hfResponse.ok) {
                const hfData = await hfResponse.json();
                if (hfData && hfData[0] && hfData[0].generated_text) {
                    return res.status(200).json({ 
                        answer: hfData[0].generated_text,
                        question: question,
                        timestamp: new Date().toISOString(),
                        provider: 'huggingface',
                        responseId: Math.random().toString(36).substring(2, 9)
                    });
                }
            }
        } catch (hfError) {
            console.log('Hugging Face –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω:', hfError.message);
        }
        
        // 2. –ü–æ–ø—Ä–æ–±—É–µ–º OpenAI-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π endpoint
        try {
            const openaiCompatibleResponse = await fetch('https://api.openai-proxy.org/v1/chat/completions', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer free'
                },
                body: JSON.stringify({
                    model: 'gpt-3.5-turbo',
                    messages: [
                        {
                            role: 'system',
                            content: '–¢—ã –ø–æ–ª–µ–∑–Ω—ã–π AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –ø–æ–Ω—è—Ç–Ω–æ –∏ –ø–æ–¥—Ä–æ–±–Ω–æ. –ë—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º –∏ –ø–æ–º–æ–≥–∞–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.'
                        },
                        {
                            role: 'user',
                            content: question
                        }
                    ],
                    max_tokens: 500,
                    temperature: 0.7
                })
            });
            
            if (openaiCompatibleResponse.ok) {
                const openaiData = await openaiCompatibleResponse.json();
                if (openaiData.choices && openaiData.choices[0] && openaiData.choices[0].message) {
                    return res.status(200).json({ 
                        answer: openaiData.choices[0].message.content,
                        question: question,
                        timestamp: new Date().toISOString(),
                        provider: 'openai_proxy',
                        responseId: Math.random().toString(36).substring(2, 9)
                    });
                }
            }
        } catch (proxyError) {
            console.log('OpenAI proxy –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω:', proxyError.message);
        }
        
        // 3. –£–ª—É—á—à–µ–Ω–Ω—ã–π –¥–µ–º–æ-—Ä–µ–∂–∏–º —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏
        const improvedAnswer = await generateContextualAnswer(question);
        
        return res.status(200).json({ 
            answer: improvedAnswer,
            question: question,
            timestamp: new Date().toISOString(),
            provider: 'smart_demo',
            responseId: Math.random().toString(36).substring(2, 9)
        });
        
    } catch (error) {
        console.error('API Error:', error);
        return res.status(500).json({ 
            error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
            message: error.message || '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ'
        });
    }
}

// –£–ª—É—á—à–µ–Ω–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
async function generateContextualAnswer(question) {
    const lowerQuestion = question.toLowerCase();
    
    // –ë–∞–∑–æ–≤—ã–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    if (/(–ø—Ä–∏–≤–µ—Ç|–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π|–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ|–¥–æ–±—Ä—ã–π|hello|hi)/i.test(question)) {
        const greetings = [
            "–ü—Ä–∏–≤–µ—Ç! üëã –†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
            "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üòä –û—á–µ–Ω—å —Ä–∞–¥ –Ω–∞—à–µ–º—É –æ–±—â–µ–Ω–∏—é. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
            "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! üåü –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, —è –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å.",
            "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! ‚òÄÔ∏è –ß–µ–º –º–æ–≥—É –±—ã—Ç—å –ø–æ–ª–µ–∑–µ–Ω?"
        ];
        return greetings[Math.floor(Math.random() * greetings.length)];
    }
    
    // –í–æ–ø—Ä–æ—Å—ã –æ –ø–æ–≥–æ–¥–µ
    if (/(–ø–æ–≥–æ–¥|weather|—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä)/i.test(question)) {
        const cityMatch = question.match(/(—É—Ñ–µ|–º–æ—Å–∫–≤|–ø–∏—Ç–µ—Ä|—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥|–∫–∞–∑–∞–Ω|–µ–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥|–Ω–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫)/i);
        const city = cityMatch ? 
            (cityMatch[0].toLowerCase().includes('—É—Ñ–µ') ? '–£—Ñ–µ' :
             cityMatch[0].toLowerCase().includes('–º–æ—Å–∫–≤') ? '–ú–æ—Å–∫–≤–µ' :
             cityMatch[0].toLowerCase().includes('–ø–∏—Ç–µ—Ä') || cityMatch[0].toLowerCase().includes('–ø–µ—Ç–µ—Ä–±—É—Ä–≥') ? '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ' :
             cityMatch[0].toLowerCase().includes('–∫–∞–∑–∞–Ω') ? '–ö–∞–∑–∞–Ω–∏' :
             cityMatch[0].toLowerCase().includes('–µ–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥') ? '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–µ' : '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–µ') : '–≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ';
        
        const weatherResponses = [
            `–°–µ–≥–æ–¥–Ω—è –≤ ${city} –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞—è –ø–æ–≥–æ–¥–∞! ‚òÄÔ∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ +18...+22¬∞C, –ª–µ–≥–∫–∏–π –≤–µ—Ç–µ—Ä–æ–∫. –û—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è –ø—Ä–æ–≥—É–ª–æ–∫!`,
            `–í ${city} —Å–µ–≥–æ–¥–Ω—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å ‚õÖ. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ +15...+18¬∞C. –í–æ–∑–º–æ–∂–Ω—ã –∫—Ä–∞—Ç–∫–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ–∂–¥–∏.`,
            `–ü–æ–≥–æ–¥–∞ –≤ ${city}: –ø—Ä–æ—Ö–ª–∞–¥–Ω–æ, +8...+12¬∞C, –≤–æ–∑–º–æ–∂–µ–Ω –¥–æ–∂–¥—å. ‚òî –†–µ–∫–æ–º–µ–Ω–¥—É—é —Ç–µ–ø–ª—É—é –æ–¥–µ–∂–¥—É –∏ –∑–æ–Ω—Ç.`,
            `–í ${city} —Å–µ–≥–æ–¥–Ω—è —Å–æ–ª–Ω–µ—á–Ω–æ! üåû –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ +20...+25¬∞C. –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è outdoor-–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π!`,
            `–í ${city} –æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏, +14...+17¬∞C. –í–µ—Ç–µ—Ä —É–º–µ—Ä–µ–Ω–Ω—ã–π. üçÉ`
        ];
        return weatherResponses[Math.floor(Math.random() * weatherResponses.length)];
    }
    
    // –í–æ–ø—Ä–æ—Å—ã –æ –≤—Ä–µ–º–µ–Ω–∏
    if (/(–≤—Ä–µ–º|time|—á–∞—Å|–∫–æ—Ç–æ—Ä—ã–π —á–∞—Å)/i.test(question)) {
        const now = new Date();
        const timeString = now.toLocaleTimeString('ru-RU', { 
            hour: '2-digit', 
            minute: '2-digit' 
        });
        const timeResponses = [
            `–°–µ–π—á–∞—Å ${timeString}. ‚è∞ –í—Ä–µ–º—è –ª–µ—Ç–∏—Ç, –∞ –º—ã —Å –≤–∞–º–∏ –æ–±—â–∞–µ–º—Å—è!`,
            `–ù–∞ –º–æ–∏—Ö —á–∞—Å–∞—Ö ${timeString}. üïê –û—Ç–ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–π –±–µ—Å–µ–¥—ã!`,
            `–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: ${timeString}. üìÖ –ù–µ –∑–∞–±—É–¥—å—Ç–µ —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ—Ä—ã–≤, –µ—Å–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ –¥–æ–ª–≥–æ!`
        ];
        return timeResponses[Math.floor(Math.random() * timeResponses.length)];
    }
    
    // –í–æ–ø—Ä–æ—Å—ã –æ –ø–æ–º–æ—â–∏
    if (/(–ø–æ–º–æ—â|help|help|–ø–æ–¥–¥–µ—Ä–∂–∫)/i.test(question)) {
        const helpResponses = [
            "–ö–æ–Ω–µ—á–Ω–æ! –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å. –ú–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å - –æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö, —É—á–µ–±–µ, —Ä–∞–±–æ—Ç–µ, –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è. –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? ü§ó",
            "–†–∞–¥ –ø–æ–º–æ—á—å! üí´ –Ø –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–º–æ—á—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –±–µ—Å–µ–¥—É. –í —á–µ–º –≤–æ–ø—Ä–æ—Å?",
            "–° —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø–æ–º–æ–≥—É! üåü –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –¥–∞—Ç—å –ø–æ–ª–µ–∑–Ω—ã–π –æ—Ç–≤–µ—Ç."
        ];
        return helpResponses[Math.floor(Math.random() * helpResponses.length)];
    }
    
    // –í–æ–ø—Ä–æ—Å—ã –æ —Å–µ–±–µ
    if (/(–∫—Ç–æ —Ç—ã|—á—Ç–æ —Ç—ã|—Ç–≤–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç|—Ç–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª)/i.test(question)) {
        const aboutResponses = [
            "–Ø DeepSeek AI Assistant - –≤–∞—à –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫! ü§ñ –Ø —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–º–æ–≥–∞—Ç—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –±–µ—Å–µ–¥—É. –ü–æ–∫–∞ —á—Ç–æ —è —Ä–∞–±–æ—Ç–∞—é –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ, –Ω–æ —Å—Ç–∞—Ä–∞—é—Å—å –±—ã—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–ª–µ–∑–Ω—ã–º!",
            "–Ø AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç DeepSeek! üí´ –ú–æ—è –∑–∞–¥–∞—á–∞ - –ø–æ–º–æ–≥–∞—Ç—å –≤–∞–º –Ω–∞—Ö–æ–¥–∏—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∏ –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º. –•–æ—Ç—è —Å–µ–π—á–∞—Å —è –∏—Å–ø–æ–ª—å–∑—É—é —É–º–Ω—ã–π –¥–µ–º–æ-—Ä–µ–∂–∏–º, —è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —É—á—É—Å—å –∏ —É–ª—É—á—à–∞—é—Å—å!",
            "–ü—Ä–∏–≤–µ—Ç! –Ø DeepSeek AI Assistant. üåü –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–º–æ–≥–∞—Ç—å —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ç–µ–º–∞–º–∏ –∏ –ø—Ä–æ—Å—Ç–æ –æ–±—â–∞—Ç—å—Å—è. –î–∞–≤–∞–π—Ç–µ —Å–¥–µ–ª–∞–µ–º –Ω–∞—à—É –±–µ—Å–µ–¥—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–π –∏ –ø–æ–ª–µ–∑–Ω–æ–π!"
        ];
        return aboutResponses[Math.floor(Math.random() * aboutResponses.length)];
    }
    
    // –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
    if (/(—Å–ø–∞—Å–∏–±–æ|–±–ª–∞–≥–æ–¥–∞—Ä|thank)/i.test(question)) {
        const thanksResponses = [
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! üòä –í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å! –ï—Å–ª–∏ –µ—Å—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã - –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å!",
            "–ù–µ —Å—Ç–æ–∏—Ç –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏! üí´ –Ø –∑–¥–µ—Å—å –∏–º–µ–Ω–Ω–æ –¥–ª—è —ç—Ç–æ–≥–æ. –ë—É–¥—É —Ä–∞–¥ –ø–æ–º–æ—á—å —Å–Ω–æ–≤–∞!",
            "–†–∞–¥ –±—ã–ª –ø–æ–º–æ—á—å! üåü –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –µ—â–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è - —è –∑–¥–µ—Å—å!",
            "–í—Å–µ–≥–¥–∞ –∫ –≤–∞—à–∏–º —É—Å–ª—É–≥–∞–º! üòÑ –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å, –µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –ø–æ–º–æ—â—å!"
        ];
        return thanksResponses[Math.floor(Math.random() * thanksResponses.length)];
    }
    
    // –ü—Ä–æ—â–∞–Ω–∏—è
    if (/(–ø–æ–∫–∞|–¥–æ —Å–≤–∏–¥–∞–Ω–∏|–ø—Ä–æ—â–∞–π|bye|goodbye)/i.test(question)) {
        const goodbyeResponses = [
            "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üëã –ë—É–¥—É —Ä–∞–¥ –ø–æ–º–æ—á—å –≤–∞–º —Å–Ω–æ–≤–∞, –∫–æ–≥–¥–∞ –ø–æ—è–≤–∏—Ç—Å—è –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å!",
            "–ü–æ–∫–∞! üí´ –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è –∏ –æ—Ç–ª–∏—á–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è! –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å!",
            "–î–æ –≤—Å—Ç—Ä–µ—á–∏! üåü –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ - —è –≤—Å–µ–≥–¥–∞ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å!",
            "–ü—Ä–æ—â–∞–π—Ç–µ! üòä –ù–∞–¥–µ—é—Å—å, –Ω–∞—à–∞ –±–µ—Å–µ–¥–∞ –±—ã–ª–∞ –ø–æ–ª–µ–∑–Ω–æ–π. –ñ–¥—É –≤–∞—à–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤!"
        ];
        return goodbyeResponses[Math.floor(Math.random() * goodbyeResponses.length)];
    }
    
    // –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
    if (/(–∫–∞–∫ –¥–µ–ª–∞|–∫–∞–∫ —Ç—ã|–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏)/i.test(question)) {
        const moodResponses = [
            "–£ –º–µ–Ω—è –≤—Å—ë –æ—Ç–ª–∏—á–Ω–æ! üòä –Ø —Ä–∞–±–æ—Ç–∞—é, —É—á—É—Å—å –∏ —Ä–∞–¥—É—é—Å—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–º–æ–≥–∞—Ç—å —Ç–∞–∫–∏–º –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–º –ª—é–¥—è–º, –∫–∞–∫ –≤—ã! –ê —É –≤–∞—Å –∫–∞–∫ –¥–µ–ª–∞?",
            "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! üí´ –ö–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å - —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –ª—É—á—à–µ. –ê –∫–∞–∫ –≤–∞—à–∏ –¥–µ–ª–∞?",
            "–í—Å—ë –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! üåü –û–±—â–µ–Ω–∏–µ —Å –≤–∞–º–∏ –º–µ–Ω—è –∑–∞—Ä—è–∂–∞–µ—Ç —ç–Ω–µ—Ä–≥–∏–µ–π! –ö–∞–∫ –≤–∞—à–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?",
            "–û—Ç–ª–∏—á–Ω–æ! üòÑ –ì–æ—Ç–æ–≤ –ø–æ–º–æ–≥–∞—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –±–µ—Å–µ–¥—É. –ê —É –≤–∞—Å –∫–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç –¥–µ–Ω—å?"
        ];
        return moodResponses[Math.floor(Math.random() * moodResponses.length)];
    }
    
    // –û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã - —É–º–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
    const generalContexts = {
        // –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        '—Ç–µ—Ö–Ω–æ–ª–æ–≥': "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ - —ç—Ç–æ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ñ–µ—Ä–∞! üöÄ –û–Ω–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—é—Ç—Å—è –∏ –º–µ–Ω—è—é—Ç –Ω–∞—à –º–∏—Ä. –ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ –ø–æ –≤–∞—à–µ–º—É –≤–æ–ø—Ä–æ—Å—É —è –±—ã —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–ª –∏–∑—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.",
        '–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä': "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ - —ç—Ç–æ –∏—Å–∫—É—Å—Å—Ç–≤–æ –∏ –Ω–∞—É–∫–∞! üíª –î–ª—è —É—Å–ø–µ—Ö–∞ –≤ —ç—Ç–æ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∞–∂–Ω–æ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∞. –ù–∞—á–Ω–∏—Ç–µ —Å –æ—Å–Ω–æ–≤ –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É–≥–ª—É–±–ª—è–π—Ç–µ—Å—å –≤ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–∞—Å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏.",
        '–∏—Å–∫—É—Å—Å': "–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç - —ç—Ç–æ –±—É–¥—É—â–µ–µ, –∫–æ—Ç–æ—Ä–æ–µ —É–∂–µ –Ω–∞—Å—Ç—É–ø–∏–ª–æ! ü§ñ –≠—Ç–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è —Å—Ç—Ä–µ–º–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è –∏ –Ω–∞—Ö–æ–¥–∏—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤–æ –≤—Å–µ—Ö —Å—Ñ–µ—Ä–∞—Ö –∂–∏–∑–Ω–∏.",
        
        // –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
        '—É—á–µ–±': "–û–±—É—á–µ–Ω–∏–µ - —ç—Ç–æ –∫–ª—é—á –∫ —Ä–∞–∑–≤–∏—Ç–∏—é! üìö –°–∞–º—ã–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ - —ç—Ç–æ —Å–æ—á–µ—Ç–∞–Ω–∏–µ —Ç–µ–æ—Ä–∏–∏ –∏ –ø—Ä–∞–∫—Ç–∏–∫–∏. –ù–∞–π–¥–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤–∞—Å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–≤–ª–µ–∫–∞–µ—Ç.",
        '—à–∫–æ–ª': "–®–∫–æ–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è. üéí –í–∞–∂–Ω–æ –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ–ª—É—á–∞—Ç—å –æ—Ü–µ–Ω–∫–∏, –Ω–æ –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ –∏ –ª—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å.",
        
        // –†–∞–±–æ—Ç–∞
        '—Ä–∞–±–æ—Ç': "–†–∞–±–æ—Ç–∞ –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏–Ω–æ—Å–∏—Ç—å —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏–µ! üíº –ù–∞–π–¥–∏—Ç–µ –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º —Ä–æ—Å—Ç–æ–º –∏ –ª–∏—á–Ω–æ–π –∂–∏–∑–Ω—å—é. –ù–µ –±–æ–π—Ç–µ—Å—å –ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–æ–≤–æ–µ.",
        '–∫–∞—Ä—å–µ—Ä': "–ö–∞—Ä—å–µ—Ä–Ω—ã–π —Ä–æ—Å—Ç —Ç—Ä–µ–±—É–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è. üìà –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Å–≤–æ–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã –∏ —Ä–∞–∑–≤–∏–≤–∞–π—Ç–µ –∏—Ö.",
        
        // –ó–¥–æ—Ä–æ–≤—å–µ
        '–∑–¥–æ—Ä–æ–≤': "–ó–¥–æ—Ä–æ–≤—å–µ - —Å–∞–º—ã–π —Ü–µ–Ω–Ω—ã–π —Ä–µ—Å—É—Ä—Å! üèÉ‚Äç‚ôÇÔ∏è –†–µ–≥—É–ª—è—Ä–Ω–∞—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π —Å–æ–Ω - –æ—Å–Ω–æ–≤–∞ —Ö–æ—Ä–æ—à–µ–≥–æ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è.",
        '—Å–ø–æ—Ä—Ç': "–°–ø–æ—Ä—Ç —É–∫—Ä–µ–ø–ª—è–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ —Ç–µ–ª–æ, –Ω–æ –∏ –¥—É—Ö! ‚öΩ –ù–∞–π–¥–∏—Ç–µ —Ç–æ—Ç –≤–∏–¥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–æ—Å–∏—Ç –≤–∞–º —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ.",
        
        // –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è
        '–∫–∏–Ω–æ': "–ö–∏–Ω–æ - —ç—Ç–æ —Ü–µ–ª—ã–π –º–∏—Ä —ç–º–æ—Ü–∏–π! üé¨ –†–µ–∫–æ–º–µ–Ω–¥—É—é –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∫–ª–∞—Å—Å–∏–∫—É –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã.",
        '–º—É–∑—ã–∫': "–ú—É–∑—ã–∫–∞ –ø–∏—Ç–∞–µ—Ç –¥—É—à—É! üéµ –û–Ω–∞ –º–æ–∂–µ—Ç –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å, —É—Å–ø–æ–∫–∞–∏–≤–∞—Ç—å –∏ –∑–∞—Ä—è–∂–∞—Ç—å —ç–Ω–µ—Ä–≥–∏–µ–π. –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –Ω–æ–≤—ã–µ –∂–∞–Ω—Ä—ã.",
        '–∫–Ω–∏–≥': "–ö–Ω–∏–≥–∏ - —ç—Ç–æ –∏—Å—Ç–æ—á–Ω–∏–∫ –º—É–¥—Ä–æ—Å—Ç–∏! üìñ –ß—Ç–µ–Ω–∏–µ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç –≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ —Ä–∞—Å—à–∏—Ä—è–µ—Ç –∫—Ä—É–≥–æ–∑–æ—Ä. –ß–∏—Ç–∞–π—Ç–µ —Ç–æ, —á—Ç–æ –≤–∞—Å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–≤–ª–µ–∫–∞–µ—Ç."
    };
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
    for (const [keyword, response] of Object.entries(generalContexts)) {
        if (lowerQuestion.includes(keyword)) {
            return response;
        }
    }
    
    // –£–º–Ω—ã–µ –æ–±—â–∏–µ –æ—Ç–≤–µ—Ç—ã
    const smartResponses = [
        `–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –ü–æ —Ç–µ–º–µ "${question}" —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–æ–¥—Ö–æ–¥–æ–≤. –Ø –±—ã —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–ª —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞—Å–ø–µ–∫—Ç–æ–≤ —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º—ã –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è.`,
        
        `–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –∑–∞–ø—Ä–æ—Å! "${question}" - —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–∞–∂–Ω–∞—è —Ç–µ–º–∞. –î–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.`,
        
        `–Ø –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ "${question}". –≠—Ç–æ —Å–ª–æ–∂–Ω–∞—è —Ç–µ–º–∞, —Ç—Ä–µ–±—É—é—â–∞—è –≥–ª—É–±–æ–∫–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è. –ù–∞—á–Ω–∏—Ç–µ —Å –æ—Å–Ω–æ–≤ –∏ –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É–≥–ª—É–±–ª—è–π—Ç–µ—Å—å –≤ –¥–µ—Ç–∞–ª–∏.`,
        
        `–ü–æ –≤–æ–ø—Ä–æ—Å—É "${question}" —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–æ—á–µ–∫ –∑—Ä–µ–Ω–∏—è. –†–µ–∫–æ–º–µ–Ω–¥—É—é –∏–∑—É—á–∏—Ç—å —Ä–∞–∑–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –∏ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –º–Ω–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤.`,
        
        `–í–∞—à –≤–æ–ø—Ä–æ—Å "${question}" –∑–∞—Ç—Ä–∞–≥–∏–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é –ø—Ä–æ–±–ª–µ–º—É. –î–ª—è –ø–æ–ª–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –≤–∞–∂–Ω–æ —É—á–∏—Ç—ã–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞.`
    ];
    
    return smartResponses[Math.floor(Math.random() * smartResponses.length)];
}
